name: Docker Image Build CI

on:
  push:
  #   tags:
  #     - "v[0-9]+.[0-9]+.[0-9]+"
  #   branches:
  #     - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      web: ${{ steps.filter.outputs.web }}
      processor: ${{ steps.filter.outputs.processor }}
      attendance: ${{ steps.filter.outputs.attendance }}
      chooser: ${{ steps.filter.outputs.chooser }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web: 'apps/web/package.json'
            processor: 'apps/processor/package.json'
            attendance: 'apps/client/attendance/package.json'
            chooser: 'apps/client/chooser/package.json'

  web:
    needs: changes
    if: github.repository == 'sora-vp/baseline' && needs.changes.outputs.web == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "./apps/web/Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sora-baseline-web:${{ github.ref_name }}

  processor:
    needs: changes
    if: github.repository == 'sora-vp/baseline' && needs.changes.outputs.processor == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "./apps/processor/Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sora-baseline-processor:${{ github.ref_name }}

  client-attendance:
    needs: changes
    if: github.repository == 'sora-vp/baseline' && needs.changes.outputs.attendance == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "./apps/clients/attendance/Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sora-baseline-client-attendance:${{ github.ref_name }}

  client-chooser:
    needs: changes
    if: github.repository == 'sora-vp/baseline' && needs.changes.outputs.chooser == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "./apps/clients/chooser/Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sora-baseline-client-chooser:${{ github.ref_name }}

  update-docker-compose-repo:
    needs: [web, processor, client-attendance, client-chooser]
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
      && (needs.changes.outputs.web == 'true' || needs.changes.outputs.processor == 'true' || needs.changes.outputs.attendance == 'true' || needs.changes.outputs.chooser == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: sora-vp/baseline-docker
